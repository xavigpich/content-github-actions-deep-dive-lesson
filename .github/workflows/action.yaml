name: Deploy my Lambda Function

# trigger on all push events to main branch
on: 
  push:
    branches:
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install linting libraries
        run: |
            cd function
            pip install flake8
      - name: Lint with flake8
        run: |
            # Select identifies which errors should cause the job to fail
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # The exit zero flag will show errors as warnings and not fail the run
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip

#  upload:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Download Artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: zipped-bundle
#      - name: Confugure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-east-1
#      - name: Upload to AWS S3
#        run: aws s3 cp ${{ github.sha }}.zip s3:{{ secrets.AWS_S3_BUCKET }}/${{ github.sha }}.zip
#  

#  test:
#    runs-on: ubuntu-latest
#    needs: upload
#    steps:
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-east-1
#      - name: Create test function
#        run: |
#            aws lambda create-function --function-name test-function \
#              --code S3Bucket=${{ secrets.AWS_S3_BUCKET }},S3Key=${{ github.sha }}.zip \
#              --handler lambda_function.lambda_handler \
#              --runtime python3.8 \
#              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
#      - name: Sleep 30s
#        run: sleep 30
#      - name: Destroy test function
#        if: ${{ always() }}
#        run: aws lambda delete-function --function-name test-function
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - name: Confugure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-east-1
#      - name: Update function code
#        run: |
#            aws lambda update-function-code \
#              --function-name my-function \
#              --s3-bucket ${{ secrets.AWS_S3_BUCKET }} \
#              --s3-key ${{ github.sha }}.zip
#              --publish

          
